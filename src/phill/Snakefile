import snek5000
from phill.output import OutputPhill as Output


# Case name
CASE = "phill"
CONFIG = Output.get_configfile()

snek5000.ensure_env()


configfile: CONFIG


# Necessary to pass configuration to other Snakemake modules
config.update(
    {
        "CASE": CASE,
        "file": CONFIG,
        "includes": " ".join(Output().fortran_inc_flags),
        "objects": " ".join(Output().makefile_usr_obj),
    }
)

snek5000.append_gcc_debug_flags(config)


# default rule
rule all:
    input:
        "nek5000",


# shorthand for mesh
rule mesh:
    input:
        f"{CASE}.re2",
        f"{CASE}.ma2",


# compiler and run rules
# ======================
module compiler:
    snakefile:
        snek5000.get_asset("compiler.smk")
    config:
        config


use rule * from compiler


# I/O rules
# =========
module io:
    snakefile:
        snek5000.get_asset("io.smk")
    config:
        config


use rule * from io


# internal rules
# ==============
module internal:
    snakefile:
        snek5000.get_asset("internal.smk")
    config:
        config


use rule * from internal as internal_*
